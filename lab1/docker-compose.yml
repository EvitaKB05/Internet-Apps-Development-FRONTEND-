# docker-compose.yml
version: '3.8'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-10-15T19-57-03Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  environment:
    MINIO_ACCESS_KEY: minio
    MINIO_SECRET_KEY: minio124
  expose:
    - '9000'
    - '9001'
  healthcheck:
    test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '9000:9000'
      - '9001:9001'
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  postgres:
    image: postgres:latest
    container_name: lab2_postgres
    environment:
      POSTGRES_USER: simpleuser
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: lung_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer:latest
    container_name: lab2_adminer
    ports:
      - '8081:8080'
    depends_on:
      - postgres

  minio-init:
    image: minio/mc
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio1:9000 minio minio124) do echo '...waiting for minio...' && sleep 1; done;
      /usr/bin/mc mb myminio/pics || true;
      /usr/bin/mc anonymous set public myminio/pics || true;
      echo 'Minio initialized successfully';"

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  postgres_data:
  redis-data:
